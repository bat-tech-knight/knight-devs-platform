from flask import Flask, jsonify, request
from flask_cors import CORS
import os

app = Flask(__name__)
CORS(app)

# Enable CORS for all routes
@app.after_request
def after_request(response):
    response.headers.add('Access-Control-Allow-Origin', '*')
    response.headers.add('Access-Control-Allow-Headers', 'Content-Type,Authorization')
    response.headers.add('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS')
    return response

@app.route('/')
def hello():
    return jsonify({
        'message': 'Hello from Flask!',
        'status': 'success'
    })

@app.route('/api/health')
def health():
    return jsonify({
        'status': 'healthy',
        'service': 'Flask API'
    })

@app.route('/api/users', methods=['GET'])
def get_users():
    # Mock user data
    users = [
        {'id': 1, 'name': 'John Doe', 'email': 'john@example.com'},
        {'id': 2, 'name': 'Jane Smith', 'email': 'jane@example.com'},
        {'id': 3, 'name': 'Bob Johnson', 'email': 'bob@example.com'}
    ]
    return jsonify({
        'users': users,
        'count': len(users)
    })

@app.route('/api/users', methods=['POST'])
def create_user():
    data = request.get_json()
    
    if not data or 'name' not in data or 'email' not in data:
        return jsonify({
            'error': 'Name and email are required'
        }), 400
    
    # Mock user creation
    new_user = {
        'id': 4,  # In a real app, this would be generated by the database
        'name': data['name'],
        'email': data['email']
    }
    
    return jsonify({
        'message': 'User created successfully',
        'user': new_user
    }), 201

@app.route('/api/python-example')
def python_example():
    return jsonify({
        'message': 'This is a Python Flask endpoint',
        'python_version': os.sys.version,
        'framework': 'Flask'
    })

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
